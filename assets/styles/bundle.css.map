{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Chip.svelte",
    "../../Header.svelte",
    "../../Icon.svelte",
    "../../NavigationDrawer.svelte",
    "../../ProgressCircular.svelte",
    "../../ProgressLinear.svelte",
    "../../Ripple.svelte",
    "../../Snackbar.svelte",
    "../../Label.svelte",
    "../../Underline.svelte",
    "../../Tooltip.svelte",
    "../../Flex.svelte",
    "../../Waypoint.svelte",
    "../../App.svelte",
    "../../BtnArea.svelte",
    "../../IntroPage.svelte",
    "../../Service.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { scale } from \"svelte/transition\";\n  import createRipple from \"../Ripple/ripple.js\";\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  import Icon from \"../Icon\";\n\n\n\n  export let removable = false;\n  export let icon = \"\";\n  export let outlined = false;\n  export let selected = false;\n  export let selectable = true;\n  export let color = \"primary\";\n  export let remove = \"\";\n  export let add = \"\";\n  export let replace = {};\n\n  $: ripple = createRipple(color);\n\n  let value = true;\n\n  const dispatch = createEventDispatcher();\n\n  function close() {\n    dispatch(\"close\");\n    value = false;\n  }\n\n  function select() {\n    if (!selectable) return;\n\n    selected = true;\n  }\n\n  const { bg, txt, border } = utils(color);\n\n  const cb = new ClassBuilder();\n\n  $: classes = cb\n    .flush()\n    .add('relative overflow-hidden flex items-center rounded-full px-2 py-1')\n    .add('bg-transparent border', outlined)\n    .add('border-gray-400 border-solid hover:bg-gray-50 dark-hover:bg-dark-400 bg-gray-300 dark:bg-dark-600', !selected)\n    .add(`${border()} dark:${border('800')} ${txt()} ${bg(100)} hover:${bg(50)}`, selected)\n    .remove(remove)\n    .replace(replace)\n    .add(add)\n    .get();\n\n  const props = filterProps([\n    'removable',\n    'icon',\n    'outlined',\n    'selected',\n    'selectable',\n    'color',\n  ], $$props);\n\n  $: iconClass = selected ? `hover:${bg(300)} ${bg(400)}` : \"hover:bg-gray-400 bg-gray-500 dark:bg-gray-800\";\n\n   $: c = cb\n      .flush()\n      .add($$props.class)\n      .get();\n</script>\n\n<style>\n  .p-1\\/2 {\n    padding: 0.125rem;\n  }\n</style>\n\n{#if value}\n  <span class=\"{c} mx-1 inline-block\" out:scale={{ duration: 100 }}>\n    <button\n      class={classes}\n      on:click\n      use:ripple\n      {...props}\n      on:click={select}>\n      {#if icon}\n        <Icon small class={selected ? txt(400) : 'text-gray-600'}>\n          {icon}\n        </Icon>\n      {/if}\n      <span class=\"px-2 text-sm\">\n        <slot />\n      </span>\n      {#if removable}\n        <span\n          class=\"rounded-full p-1/2 inline-flex items-center cursor-pointer {iconClass}\"\n          on:click|stopPropagation={close}>\n          <Icon class=\"text-white dark:text-white\" xs>clear</Icon>\n        </span>\n      {/if}\n    </button>\n  </span>\n{/if}\n",
    "<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import Icon from \"../Icon\";\n\n  const classesDefault = \"capitalize duration-100 text-gray-600 text-xs hover:text-black dark-hover:text-white p-3 font-normal text-right\";\n\n\n  export let classes = classesDefault;\n\n\n  export let column = {};\n  export let asc = false;\n  export let sortBy = false;\n  export let sortable = true;\n  export let editing = false;\n\n  const dispatch = createEventDispatcher();\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  function headerColumnClass(column) {\n    const cb = new ClassBuilder('sort-wrapper flex items-center justify-end');\n    if (column.headerReplace) {\n      cb.replace(column.headerReplace)\n    }\n    if (column.headerAdd) {\n      cb.add(column.headerAdd);\n    }\n    if (column.headerRemove) {\n      cb.remove(column.headerRemove);\n    }\n    return cb.get();\n  }\n</script>\n\n<style>\n  th .asc {\n    transform: rotate(180deg);\n  }\n</style>\n\n<th\n  class={c}\n  class:cursor-pointer={sortable || column.sortable}\n  on:click={() => {\n    if (column.sortable === false || !sortable) return;\n    dispatch(\"sort\", column);\n\n    editing = false;\n    asc = sortBy === column ? !asc : false;\n    sortBy = column;\n  }}\n>\n  <div class={headerColumnClass(column)}>\n    {#if sortable && column.sortable !== false && !column.iconAfter}\n      <span class=\"sort\" class:asc={!asc && sortBy === column}>\n        <Icon small color=\"text-gray-400 dark:text-gray-100\">arrow_downward</Icon>\n      </span>\n    {/if}\n    <span>{column.label || column.field}</span>\n    {#if sortable && column.sortable !== false && !!column.iconAfter}\n      <span class=\"sort\" class:asc={!asc && sortBy === column}>\n        <Icon small color=\"text-gray-400 dark:text-gray-100\">arrow_downward</Icon>\n      </span>\n    {/if}\n  </div>\n</th>\n",
    "<script>\n\n\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl {$$props.class} duration-200 ease-in\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n",
    "<script>\n  import { fly } from \"svelte/transition\";\n  import { quadIn } from \"svelte/easing\";\n  import { Scrim } from \"../Util\";\n  import breakpoints from \"../../breakpoints\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const bp = breakpoints();\n\n  const classesDefault = \"fixed top-0 md:mt-16 w-auto drawer overflow-hidden h-full\";\n  const navClassesDefault = `h-full w-full bg-white dark:bg-gray-900 dark:text-gray-200 absolute flex w-auto z-20 drawer\n    pointer-events-auto overflow-y-auto`;\n\n  export let right = false;\n  export let persistent = false;\n  export let elevation = true;\n  export let show = true;\n  export let classes = classesDefault;\n  export let navClasses = navClassesDefault;\n  export let borderClasses = `border-gray-600 ${right ? \"border-l\" : \"border-r\"}`;\n\n\n\n\n  export let transitionProps = {\n    duration: 200,\n    x: -300,\n    easing: quadIn,\n    opacity: 1,\n  };\n\n  $: transitionProps.x = right ? 300 : -300;\n  $: persistent = show = $bp !== \"sm\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  if ($bp === 'sm') show = false;\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(borderClasses, !elevation && persistent)\n    .add($$props.class)\n    .add(\"right-0\", right)\n    .add(\"left-0\", !right)\n    .add(\"pointer-events-none\", persistent)\n    .add(\"z-50\", !persistent)\n    .add(\"elevation-4\", elevation)\n    .add(\"z-20\", persistent)\n    .get();\n\n  const ncb = new ClassBuilder(navClasses, navClassesDefault);\n\n  $: n = ncb\n    .flush()\n    .get();\n\n</script>\n\n<style>\n  .drawer {\n    min-width: 250px;\n  }\n\n  aside {\n    height: 100vh;\n  }\n</style>\n\n{#if show}\n  <aside\n    class={c}\n    transition:fly={transitionProps}\n  >\n    {#if !persistent}\n      <Scrim on:click={() => show = false} />\n    {/if}\n    <nav\n      role=\"navigation\"\n      class={n}\n    >\n      <div class=\"w-full\">\n        <slot />\n      </div>\n    </nav>\n  </aside>\n{/if}\n",
    "<script>\n  export let progress = null;\n  export let color = \"primary\";\n  export let width = 3;\n  export let size = 70;\n\n  $: style = progress > 0 ? `\n      animation: none;\n      stroke-dasharray: ${150000 - progress * 1000};\n      stroke-dashoffset: -${124 - (progress * 124) / 100};\n    ` : \"\";\n</script>\n\n<style>\n  .circular {\n    animation: rotate 2s linear infinite;\n    position: relative;\n  }\n\n  .path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124;\n    }\n  }\n</style>\n\n<svg class=\"circular\" style=\"width: {size}px; height: {size}px;\">\n  <circle\n    class=\"path stroke-{color}\"\n    cx={size / 2}\n    cy={size / 2}\n    fill=\"none\"\n    r={(size / 2) - (size / 5)}\n    stroke-width={width}\n    stroke-miterlimit=\"10\"\n    {style} />\n</svg>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { slide } from \"svelte/transition\";\n\n  export let app = false;\n  export let progress = 0;\n  export let color = \"primary\";\n\n  let initialized = false;\n\n  onMount(() => {\n    if (!app) return;\n\n    setTimeout(() => {\n      initialized = true;\n    }, 200);\n  });\n</script>\n\n<style>\n  /* kudos https://codepen.io/shalimano/pen/wBmNGJ */\n  .inc {\n    animation: increase 2s ease-in-out infinite;\n  }\n  .dec {\n    animation: decrease 2s 0.9s ease-in-out infinite;\n  }\n\n  @keyframes increase {\n    from {\n      left: -5%;\n      width: 5%;\n    }\n    to {\n      left: 130%;\n      width: 150%;\n    }\n  }\n  @keyframes decrease {\n    from {\n      left: -90%;\n      width: 90%;\n    }\n    to {\n      left: 110%;\n      width: 10%;\n    }\n  }\n</style>\n\n<div\n  class:fixed={app}\n  class:z-50={app}\n  class=\"top-0 left-0 w-full h-1 bg-{color}-100 overflow-hidden relative\"\n  class:hidden={app && !initialized}\n  transition:slide={{ duration: 300 }}>\n  <div\n    class=\"bg-{color}-500 h-1 absolute\"\n    class:inc={!progress}\n    class:transition={progress}\n    style={progress ? `width: ${progress}%` : \"\"} />\n  <div class=\"bg-{color}-500 h-1 absolute dec\" class:hidden={progress} />\n</div>\n",
    "<script>\n  export let color = \"primary\";\n  export let noHover = false;\n  import createRipple from \"../Ripple/ripple.js\";\n\n  $: ripple = createRipple(color, true);\n  $: hoverClass = `hover:bg-${color}-transLight`;\n</script>\n\n<style>\n  .ripple {\n    position: absolute !important;\n  }\n</style>\n\n<span\n  use:ripple\n  class=\"z-40 {$$props.class} p-2 rounded-full flex items-center justify-center top-0 left-0 {noHover ? \"\" : hoverClass}\">\n  <slot />\n</span>\n",
    "<script context=\"module\">\n  import { writable } from \"svelte/store\";\n\n  const queue = writable([]);\n  let running = false;\n</script>\n\n<script>\n  import { fade, scale } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import Button from \"../Button\";\n  import { Spacer } from \"../Util\";\n  import utils, { ClassBuilder } from \"../../utils/classes.js\";\n\n  export let value = false;\n  export let timeout = 2000;\n  export let inProps = { duration: 100, easing: quadIn };\n  export let outProps = { duration: 100, easing: quadOut, delay: 150 };\n  export let color = \"gray\";\n  export let text = \"white\";\n  export let top = false;\n  export let bottom = true;\n  export let right = false;\n  export let left = false;\n  export let noAction = true;\n  export let hash = false;\n\n  const dispatch = createEventDispatcher();\n\n  const classesDefault = `pointer-events-auto flex absolute py-2 px-4 z-30 mb-4 content-between mx-auto\n      rounded items-center elevation-2 h-12`;\n  const wrapperDefault = \"fixed w-full h-full flex items-center justify-center pointer-events-none\";\n\n  export let classes = wrapperDefault;\n\n  const cb = new ClassBuilder($$props.class, classesDefault);\n  const wrapperCb = new ClassBuilder(classes, wrapperDefault);\n\n  let wClasses = i => i;\n  let tm;\n  let node;\n\n  let bg = () => {};\n\n  $: {\n    const u = utils(color || \"gray\");\n    bg = u.bg;\n  }\n\n  $: {\n    hash = hash || (value ? btoa(`${value}${new Date().valueOf()}`) : null);\n    value = value;\n  }\n\n  $: toggler = () => toggle(value, hash);\n\n  $: if (value) {\n    queue.update(u => [...u, toggler]);\n  }\n\n  $: if (!running && value && $queue.length) {\n    $queue.shift()();\n  }\n\n  $: if (!value) clearTimeout(tm);\n\n  function toggle(h, id) {\n    if (value === false && running === false) {\n      return;\n    }\n    hash = running = value = id;\n\n    if (!timeout) return;\n\n    tm = setTimeout(() => {\n      value = running = hash = false;\n      dispatch(\"finish\");\n\n      if ($queue.length) {\n        $queue.shift()();\n      }\n    }, timeout);\n  }\n\n  $: c = cb\n      .flush()\n      .add(bg(800), color)\n      .add(\"right-0 mr-2\", right)\n      .add(\"top-0 mt-2\", top)\n      .add(\"left-0 ml-2\", left)\n      .add(\"bottom-0\", bottom)\n      .add(\"snackbar\", !noAction)\n      .get();\n\n  // for some reason it doesn't get updated otherwise\n  $: if (node) node.classList = c;\n\n  wClasses = wrapperCb\n    .flush()\n    .add(`text-${text}`)\n    .get();\n</script>\n\n<style>\n  .snackbar {\n    min-width: 344px;\n  }\n</style>\n\n{#if value && (running === hash)}\n  <div\n    class=\"fixed w-full h-full top-0 left-0 z-30 pointer-events-none\"\n  >\n    <div class={wClasses}>\n      <div\n        bind:this={node}\n        in:scale={inProps}\n        out:fade={outProps}\n        on:click={() => value = false}>\n        <slot />\n        {#if !noAction}\n          <Spacer />\n          <slot name=\"action\">\n            {#if !timeout}\n              <Button text on:click={() => value = false}>Close</Button>\n            {/if}\n          </slot>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n\n\n  export let focused = false;\n  export let error = false;\n  export let outlined = false;\n  export let labelOnTop = false;\n  export let prepend = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n  export let dense = false;\n\n  let labelDefault = `pt-4 absolute top-0 label-transition block pb-2 px-4 pointer-events-none cursor-text`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let labelClasses = labelDefault;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(labelClasses, labelDefault);\n\n  let lClasses = i => i;\n\n  $: lClasses = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('text-error-500', focused && error)\n      .add('label-top text-xs', labelOnTop)\n      .add('text-xs', focused)\n      .remove('pt-4 pb-2 px-4 px-1 pt-0', labelOnTop && outlined)\n      .add(`ml-3 p-1 pt-0 mt-0 bg-${bgColor} dark:bg-dark-500`, labelOnTop && outlined)\n      .remove('px-4', prepend)\n      .add('pr-4 pl-10', prepend)\n      .remove('pt-4', dense)\n      .add('pt-3', dense)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'color',\n    'dense'\n  ], $$props);\n</script>\n\n<style>\n.label-top {\n  line-height: 0.05;\n}\n.label-transition {\n  transition: font-size 0.05s, line-height 0.1s;\n}\n:global(label.text-xs) {\n  font-size: 0.7rem;\n}\n</style>\n\n<label class=\"{lClasses} {$$props.class}\" {...props}>\n  <slot />\n</label>\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n\n\n  export let noUnderline = false;\n  export let outlined = false;\n  export let focused = false;\n  export let error = false;\n  export let color = \"primary\";\n\n  let defaultClasses = `mx-auto w-0`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let lineClasses = defaultClasses;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(lineClasses, defaultClasses);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('bg-error-500', error)\n      .add('w-full', focused || error)\n      .add(bg(), focused)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'bgcolor',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.line {\n  height: 1px;\n}\n</style>\n\n<div\n  class=\"line absolute bottom-0 left-0 w-full bg-gray-600 {$$props.class}\"\n  class:hidden={noUnderline || outlined}>\n  <div\n    class=\"{classes}\"\n    style=\"height: 2px; transition: width .2s ease\" />\n</div>\n",
    "<script>\n  import { scale, fade } from \"svelte/transition\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"tooltip whitespace-no-wrap text-xs absolute mt-2 bg-gray-600 text-gray-50 rounded md:px-2 md:py-2 py-4 px-3 z-30\";\n\n  export let classes = classesDefault;\n\n\n  export let show = false;\n\n  export let timeout = null;\n  export let delayHide = 100;\n  export let delayShow = 100;\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  function showTooltip() {\n    if (show) return;\n\n    show = true;\n\n    if (!timeout) return;\n\n    timeout = setTimeout(() => {\n      show = false;\n    }, timeout);\n  }\n\n  function hideTooltip() {\n    if (!show) return;\n\n    show = false;\n    clearTimeout(timeout);\n  }\n\n  function debounce(func, wait, immediate) {\n    let timeout;\n    return function() {\n      let context = this,\n        args = arguments;\n      let later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      let callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n</script>\n\n<style>\n.tooltip {\n  left: 50%;\n  transform: translateX(-50%);\n}\n</style>\n\n<div class=\"relative inline-block\">\n  <div\n    on:mouseenter={debounce(showTooltip, delayShow)}\n    on:mouseleave={debounce(hideTooltip, delayHide)}\n    on:mouseenter\n    on:mouseleave\n    on:mouseover\n    on:mouseout\n  >\n    <slot name=\"activator\" />\n  </div>\n\n  {#if show}\n    <div\n      in:scale={{ duration: 150 }}\n      out:scale={{ duration: 150, delay: 100 }}\n      class={c}\n    >\n      <slot />\n    </div>\n  {/if}\n</div>\n",
    "<script>\n\n  export let direction = 'row';\n  export let align = 'center';\n  export let justify = 'center';\n  export let reverse = false;\n\n  $: className = [\n    'flex',\n    `flex-direction--${direction}${reverse ? '--reverse' : ''}`,\n    `flex-align--${align}`,\n    `flex-justify--${justify}`,\n    //  Apply any additional/custom classNames, if provided\n    $$restProps.class ? $$restProps.class : '',\n  ].join(' ');\n\n</script>\n\n<style>\n  .flex {\n    display: flex;\n  }\n  /* Direction: 'row' | 'column' */\n  .flex-direction--row {\n    flex-direction: row;\n  }\n  .flex-direction--column {\n    flex-direction: column;\n  }\n  /* Reverse the order */\n  .flex-direction--row--reverse {\n    flex-direction: row-reverse;\n  }\n  .flex-direction--column--reverse {\n    flex-direction: column-reverse;\n  }\n  /* Align: 'start' | 'center' | 'end' | 'stretch' */\n  .flex-align--start {\n    align-items: flex-start;\n  }\n  .flex-align--center {\n    align-items: center;\n  }\n  .flex-align--end {\n    align-items: flex-end;\n  }\n  .flex-align--stretch {\n    align-items: stretch;\n  }\n  /* Justfy: 'start' | 'center' | 'end' | 'around' | 'between' | 'evenly' */\n  .flex-justify--start {\n    justify-content: flex-start;\n  }\n  .flex-justify--center {\n    justify-content: center;\n  }\n  .flex-justify--end {\n    justify-content: flex-end;\n  }\n  .flex-justify--around {\n    justify-content: space-around;\n  }\n  .flex-justify--between {\n    justify-content: space-between;\n  }\n  .flex-justify--evenly {\n    justify-content: space-evenly;\n  }\n</style>\n\n<div {...$$restProps} class={className}>\n\t<slot></slot>\n</div>\n",
    "<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n",
    "<link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,600,700\" rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/css?family=Roboto+Mono\" rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n\n<GdprBanner\n\t\tcookieName=\"la-generator\"\n\t\tacceptLabel=\"Accept\"\n\t\tcloseLabel=\"Close\"\n\t\tsettingsLabel=\"Preferences\"\n\t\theading=\"Use of Cookies\"\n\t\tchoices=\"{{tracking: false, marketing: false, analytics: false}}\"\n\t\tcategories={gdprCategories}\n\t\tdescription=\"We use cookies to ensure a better use of our website. If you continue browsing, we consider that you accept their use.\"\n\t\tshowEditIcon=false\n\t\ton:analytics={initAnalytics}/>\n\n<script>\n  import {projectNameRegexp, domainRegexp, hostnameRegexp, shortNameRegexp} from './regexp.js';\n  import IntroPage from './IntroPage.svelte';\n  import BtnArea from './BtnArea.svelte';\n  import Service from './Service.svelte';\n  import SiteMenu from './SiteMenu.svelte';\n  import \"smelte/src/tailwind.css\";\n  import Flex from 'svelte-flex';\n  import UrlPrefix from './UrlPrefix.svelte';\n  import {Card, Button, List, Snackbar, Switch, TextField, Tooltip} from \"smelte\";\n  import {services, servicesStore} from './Services.svelte';\n  import {onMount, onDestroy} from \"svelte\";\n  import storez from \"storez\";\n  import '@beyonk/gdpr-cookie-consent-banner/dist/style.css' // optional, you can also define your own styles\n  import GdprBanner from '@beyonk/gdpr-cookie-consent-banner';\n\n  function initAnalytics() {\n    // do something with segment.io or google analytics etc\n  }\n\n  let gdprCategories = {\n    analytics: function () {\n      console.log('No analytics cookies specified')\n    },\n    tracking: function () {\n      console.log('No tracking cookies specified')\n    },\n    marketing: function () {\n      console.log('No marketing cookies specified')\n    },\n    necessary: function () {\n      console.log('No necessary cookies specified')\n    }\n  };\n\n  let footerHeight = \"70px\";\n  let debug = true;\n  export let defConf;\n\n  const myStore = storez({\n    conf: defConf,\n    page: 1\n  }, {localstorage: {key: \"store\"}});\n\n  let conf;\n  let page;\n\n  let subs = () => myStore.subscribe(newVal => {\n    if (debug) console.log(\"On set conf\");\n    if (newVal != null) {\n      conf = newVal.conf;\n      page = newVal.page ? newVal.page : 1;\n      if (debug) console.log(newVal);\n      console.log(conf);\n    }\n  });\n\n  let persist = subs();\n\n  let save = function (resetConf) {\n    if (resetConf) {\n      if (debug) console.log(\"Resetting the assistant\")\n      myStore.set(null);\n      persist();\n      location.reload();\n    } else {\n      myStore.set({conf: conf, \"page\": page});\n    }\n    persist(); // persist remove the subscription, so we subs again\n    persist = subs()\n  }\n\n  let onChange = function () {\n    console.log(\"onchange\")\n    save();\n  }\n\n  let longNameInvalid = false;\n  let longNameError = \"\";\n  let longNameAppend = \"\";\n  let shortNameInvalid = false;\n  let shortNameError = \"\";\n  let shortNameAppend = \"\";\n  let hostnameInvalid = false;\n  let hostnameError = \"\";\n  let hostnameAppend = \"\";\n  let mainDomainInvalid = false;\n  let mainDomainError = \"\";\n  let mainDomainAppend = \"\";\n  let firstBtnDisabled = true;\n  let sndBtnDisabled = false;\n  let firstBtnText = \"« Back\";\n  let sndBtnText = \"Start\";\n  let lastPage = false;\n  let pageValid = [() => true, () => !longNameInvalid && !shortNameInvalid && !mainDomainInvalid,\n    () => conf.hostnames != null && !hostnameInvalid,\n    () => true\n  ]\n  let hostnamesHint = \"Something typically like 'vm1, vm2, vm3' or 'aws-ip-12-34-56-78, aws-ip-12-34-56-79, aws-ip-12-34-56-80'\";\n  let showSnackbarTop = false;\n\n  $: {\n    longNameInvalid = !(conf.LA_project_name.length > 0 && projectNameRegexp.test(conf.LA_project_name));\n    longNameError = longNameInvalid ? \"Project name invalid\" : \"\";\n    longNameAppend = longNameInvalid ? \"error\" : \"\";\n\n    shortNameInvalid = !shortNameRegexp.test(conf.LA_project_shortname);\n    shortNameError = shortNameInvalid ? \"Project short name invalid\" : \"\";\n    shortNameAppend = shortNameInvalid ? \"error\" : \"\";\n\n    mainDomainInvalid = !domainRegexp.test(conf.LA_domain);\n    mainDomainError = mainDomainInvalid ? \"You need to provide some-atlas-domain.org\" : \"\";\n    mainDomainAppend = mainDomainInvalid ? \"error\" : \"\";\n\n    hostnameInvalid = !hostnameRegexp.test(conf.hostnames);\n    hostnameError = hostnameInvalid ? hostnamesHint : \"\";\n    hostnameAppend = hostnameInvalid\n\n    firstBtnDisabled = page === 1\n    if (debug) console.log(`Current page ${page} valid ${pageValid[page - 1]()}`)\n    sndBtnDisabled = !pageValid[page - 1]();\n\n    lastPage = page === 4;\n    sndBtnText = page === 1 ? \"Start\" : lastPage ? \"Generate & Download\" : \"Continue »\";\n    if (conf.hostnames && conf.hostnames.length > 0) {\n      conf.hostnamesList = conf.hostnames.split(/[,\\s]/).filter(Boolean);\n      if (debug) console.log(`hostnames: ${conf.hostnamesList.toString()}`);\n    }\n  }\n\n  let onFirstBtnClick = function () {\n    page -= 1;\n    save();\n  }\n\n  let doPost = function () {\n    const btn = document.getElementById('submit-btn');\n    btn.click();\n  }\n\n  let onSndBtnClick = function () {\n    if (page === 4) {\n      save();\n      doPost();\n      // showSnackbarTop = true;\n    } else {\n      page += 1;\n      save();\n    }\n  }\n\n</script>\n\n<main class=\"hero\" style=\"--footer-height: {footerHeight};\">\n\t<SiteMenu conf={conf} save=\"{save}\"/>\n\t<Flex direction=\"column\" align=\"stretch\" justify=\"start\">\n\t\t<div class=\"main-flex\">\n\t\t\t<h2>Living Atlas Generator</h2>\n\t\t\t{#if (page === 1)}\n\t\t\t\t<IntroPage/>\n\t\t\t{/if}\n\t\t\t{#if (page === 2)}\n\t\t\t\t<TextField bind:value={conf.LA_project_name} label=\"Your LA Project Long Name\" error={longNameError}\n\t\t\t\t\t\t\t\t\t on:change={onChange} append={longNameAppend}/>\n\t\t\t\t<TextField bind:value={conf.LA_project_shortname} label=\"Your LA Project Short Name\" error={shortNameError}\n\t\t\t\t\t\t\t\t\t on:change={onChange} append={shortNameAppend}/>\n\t\t\t\t<Tooltip>\n\t\t\t\t\t<div slot=\"activator\">\n\t\t\t\t\t\t<Switch bind:value={conf.LA_enable_ssl} label=\"Use SSL?\"></Switch>\n\t\t\t\t\t</div>\n\t\t\t\t\tQuite recommended\n\t\t\t\t</Tooltip>\n\t\t\t\t<Flex align=\"center\" justify=\"start\">\n\t\t\t\t\t<UrlPrefix ssl={conf.LA_enable_ssl}/>\n\t\t\t\t\t<TextField on:change={onChange} bind:value={conf.LA_domain} error={mainDomainError} append={mainDomainAppend}\n\t\t\t\t\t\t\t\t\t\t label=\"The domain of your LA node\"/>\n\t\t\t\t</Flex>\n\t\t\t{/if}\n\n\t\t\t{#if (page === 3)}\n\t\t\t\t<TextField textarea rows=2 bind:value={conf.hostnames} append={hostnameAppend} error={hostnameError}\n\t\t\t\t\t\t\t\t\t on:change={onChange} outlined\n\t\t\t\t\t\t\t\t\t label=\"Names of the servers you will use (comma or space separated)\"\n\t\t\t\t/>\n\t\t\t\t<p>\n\t\t\t\t\t<Card.Card>\n\t\t\t\t\t\t<div slot=\"title\">\n\t\t\t\t\t\t\t<Card.Title title=\"Tips\" d/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div slot=\"text\" class=\"p-5 pb-5 pt-0 text-gray-700 body-2\">\n\t\t\t\t\t\t\tSee the <a href=\"https://github.com/AtlasOfLivingAustralia/documentation/wiki/Infrastructure-Requirements\"\n\t\t\t\t\t\t\t\t\t\t\t\t target=\"_blank\"> infrastructure requirements page</a> and other portals infrastructure in\n\t\t\t\t\t\t\t<a href=\"https://github.com/AtlasOfLivingAustralia/documentation/wiki/\"\n\t\t\t\t\t\t\t\t target=\"_blank\">our documentation wiki</a> to dimension your LA portal.\n\t\t\t\t\t\t\tFor a test portal a big server can host the main basic LA services.<br>\n\t\t\t\t\t\t\tIf you are unsure type something like \"server1, server2, server3\". You can modify this and the rest of\n\t\t\t\t\t\t\tvalues later.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Card>\n\t\t\t\t</p>\n\t\t\t{/if}\n\n\t\t\t{#if (page === 4)}\n\t\t\t\t<div class=\"to-left\">\n\t\t\t\t\t<h5 class=\"t-center\">Define how your services URLs will look like:</h5>\n\t\t\t\t\t<List class=\"\" items={services}>\n\t\t\t\t\t\t<li slot=\"item\" let:item={item}>\n\t\t\t\t\t\t\t<Service conf={conf} service={servicesStore[item]} save=\"{save}\" debug\n\t\t\t\t\t\t\t\t\t\t\t hostnamesList={conf.hostnamesList}/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</List>\n\t\t\t\t</div>\n\t\t\t\t<form target=\"_blank\" method=\"post\" action=\"/v1/gen\" class=\"form-link\">\n\t\t\t\t\t<button id=\"submit-btn\" type=\"submit\" name=\"conf\" value={JSON.stringify(conf)} class=\"link-button\">\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t{/if}\n\t\t\t<BtnArea {firstBtnDisabled} {onFirstBtnClick} {sndBtnDisabled} {onSndBtnClick} {sndBtnText} {footerHeight}/>\n\t\t</div>\n\t</Flex>\n\t<Snackbar top bind:value={showSnackbarTop}>\n\t\t<div>This is still in development. Come back soon!</div>\n\t</Snackbar>\n</main>\n\n<style>\n    main {\n        /* text-align: center; */\n        /* padding: 30px; */\n        max-width: none;\n        margin: 0 auto;\n    }\n\n    h2, .t-center {\n        text-align: center;\n        padding-bottom: 20px;\n    }\n\n    .to-left, blockquote {\n        text-align: left;\n    }\n\n    @media (min-width: 640px) {\n        .main-flex {\n            padding: 30px;\n        }\n    }\n\n    @media (max-width: 640px) {\n        main {\n            max-width: none;\n        }\n\n        .main-flex {\n            padding: 10px;\n        }\n\n        h2 {\n            font-size: 32px;\n        }\n    }\n\n    @media (min-width: 640px) and (max-width: 1024px) {\n        main {\n            max-width: none;\n        }\n    }\n\n    @media (min-width: 1024px) and (max-width: 1920px) {\n        .main-flex {\n            margin: 0 100px;\n        }\n    }\n\n    @media (min-width: 1920px) {\n        .main-flex {\n            margin: 0 150px;\n        }\n    }\n\n    .main-flex {\n        padding-bottom: var(--footer-height);\n    }\n\n    .form-link {\n        display: none;\n    }\n\n    .hero::before {\n        background-size: cover;\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: -2;\n        opacity: 0.1;\n        background-attachment: fixed;\n    }\n\n    @media (min-width: 320px) {\n        .hero::before {\n            background-image: url(/images/back-460.jpg);\n        }\n    }\n\n    @media (min-width: 460px) {\n        .hero::before {\n            background-image: url(/images/back-720.jpg);\n        }\n    }\n\n    @media (min-width: 720px) {\n        .hero::before {\n            background-image: url(/images/back-980.jpg);\n        }\n    }\n\n    @media (min-width: 980px) {\n        .hero::before {\n            background-image: url(/images/back-1240.jpg);\n        }\n    }\n\n    @media (min-width: 1240px) {\n        .hero::before {\n            background-image: url(/images/back-1500.jpg);\n        }\n    }\n\n    @media (min-width: 1500px) {\n        .hero::before {\n            background-image: url(/images/back-1760.jpg);\n        }\n    }\n\n    @media (min-width: 1760px) {\n        .hero::before {\n            background-image: url(/images/back-1920.jpg);\n        }\n    }\n\n</style>\n",
    "<script>\n  import Flex from 'svelte-flex';\n  import {Button} from \"smelte\";\n\n  export let firstBtnDisabled;\n  export let onFirstBtnClick;\n  export let sndBtnDisabled;\n  export let onSndBtnClick;\n  export let sndBtnText;\n  export let footerHeight;\n\n</script>\n\n<div class=\"btn-area\" style=\"--height: {footerHeight};\">\n  <Flex direction=\"row\" align=\"end\" justify=\"center\">\n    {#if !firstBtnDisabled}\n      <div class=\"py-2 mr-2\">\n        <Button on:click={onFirstBtnClick} block>« Back</Button>\n      </div>\n    {/if}\n    <div class=\"py-2\">\n      <Button block disabled={sndBtnDisabled} on:click=\"{onSndBtnClick}\">{sndBtnText}</Button>\n    </div>\n  </Flex>\n</div>\n\n<style>\n  .btn-area {\n    background: #e2e7ea;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding-top: 10px;\n    height: var(--height);\n  }\n</style>\n",
    "<script>\n  import {Tooltip} from \"smelte\";\n</script>\n\n<div class=\"to-left\">\n\t<blockquote class=\"pl-8 mt-2 mb-10 border-l-8 border-primary-300 text-lg right\">\n\t\t<p>\n\t\t\tThis tool facilitates the generation of your Living Atlas (LA) initial configuration.\n\t\t</p>\n\t\t<p>\n\t\t\tThis allows you to bootstrap the initial deployment of your LA Platform.\n\t\t</p>\n\t</blockquote>\n\t<h5>How this works?</h5>\n\t<p>A <a href=\"https://living-atlases.gbif.org\" target=\"_blank\">Living Atlas</a> can be typically\n\t\tdeployed using:</p>\n\t<ul class=\"list-decimal\">\n\t\t<li>the <a href=\"https://ala.org.au/\" target=\"_blank\">Atlas of Living Australia (ALA)</a> Free and Open\n\t\t\tSource Software, with\n\t\t</li>\n\t\t<li>the <a href=\"https://github.com/AtlasOfLivingAustralia/ala-install/\" target=\"_blank\">ala-install</a>\n\t\t\tALA <a href=\"https://www.ansible.com/\" target=\"_blank\">ansible</a> playbooks\n\t\t\t<Tooltip>\n\t\t\t\t<div slot=\"activator\">\n\t\t\t\t\t<a role='button'><sup>(1)</sup></a>\n\t\t\t\t</div>\n\t\t\t\tThat is, a big collection of IT 'recipes' that defines how to auto-deploy the LA services given some\n\t\t\t\tvariables (the ansible inventories)\n\t\t\t</Tooltip>\n\t\t\t, with\n\t\t</li>\n\t\t<li>some custom ansible inventories with information about your LA site (like your domain,\n\t\t\torganization name, name of the servers to use, contact email, and a big etcetera)\n\t\t</li>\n\t</ul>\n\t<p>This generator helps you with this last step. Following this assistant, and asking some basic questions\n\t\tyou can generate and download your initial LA inventories. It generates also a compatible LA\n\t\tbasic theme for your site.\n\t</p>\n\t<h5>Do you prefer to use the command line?</h5>\n\tNo problem, this is only a web helper for our <a\n\t\thref=\"https://www.npmjs.com/package/generator-living-atlas\"\n\t\ttarget=\"_blank\">yeoman living-atlas generator</a>.\n</div>\n\n<style>\n    p {\n        margin-block-start: 1em;\n        margin-block-end: 1em;\n        margin-inline-start: 0px;\n        margin-inline-end: 0px;\n    }\n\n    ul {\n        margin-block-start: 1em;\n        margin-block-end: 1em;\n        margin-inline-start: 0px;\n        margin-inline-end: 0px;\n        padding-inline-start: 40px;\n    }\n</style>",
    "<script>\n  import Flex from 'svelte-flex';\n  import {Button, Card, Select, Switch, TextField, Tooltip} from \"smelte\";\n  import UrlPrefix from './UrlPrefix.svelte';\n\n  export let service;\n  export let conf;\n  export let hostnamesList;\n  export let save;\n  export let debug = false;\n\n  const subdomainRegexp = /[a-z0-9_.\\-]+/\n  let deployError = {};\n  let urlError = {};\n  deployError[service.name_int] = \"\";\n  urlError[service.name_int] = \"\";\n\n  let verify = function () {\n    if (conf[`LA_${service.name_int}_suburl`] == null) {\n      conf[`LA_${service.name_int}_suburl`] = service.name;\n    }\n    if (conf[`LA_${service.name_int}_iniPath`] == null) {\n      conf[`LA_${service.name_int}_iniPath`] = service.path;\n    }\n    if (conf[`LA_${service.name_int}_hostname`] == null && hostnamesList && hostnamesList.length > 0) {\n      conf[`LA_${service.name_int}_hostname`] = hostnamesList[0];\n    }\n    if (!conf['LA_use_ala_bie']) {\n      conf['LA_use_species_lists'] = false;\n    }\n\n    conf[`LA_${service.name_int}_path`] = (conf[`LA_${service.name_int}_uses_subdomain`] ? conf[`LA_${service.name_int}_iniPath`].startsWith(\"/\") ? \"\" : \"/\" +\n      conf[`LA_${service.name_int}_iniPath`] : conf[`LA_${service.name_int}_suburl`].startsWith(\"/\") ? \"\" : \"/\" +\n      conf[`LA_${service.name_int}_suburl`]);\n\n    conf[`LA_${service.name_int}_url`] = (conf[`LA_${service.name_int}_uses_subdomain`] ?\n      conf[`LA_${service.name_int}_suburl`] + \".\" + conf.LA_domain : conf.LA_domain);\n\n    urlError[service.name_int] = (!subdomainRegexp.test(conf[`LA_${service.name_int}_suburl`])) ? \"Invalid subdomain\" : \"\";\n    deployError[service.name_int] = conf[`LA_${service.name_int}_hostname`] == null ? \"Please select a server\" : \"\";\n    if (debug) console.log(\"Url: \" + conf[`LA_${service.name_int}_url`]);\n    if (debug) console.log(\"Path: \" + conf[`LA_${service.name_int}_path`]);\n  }\n\n  let onChange = function () {\n    console.log(\"on service change\")\n    verify();\n    save();\n  }\n\n  $: {\n    verify();\n  }\n</script>\n\n<!--<div class=\"service-group\">-->\n<!-- <Card.Card > -->\n{#if (service.depends != null && conf[`LA_use_${service.depends}`] === true) || service.depends == null }\n\t<div class=\"p-20 pb-5 pt-3 body-2\">\n\t\t<Flex justify=\"between\">\n\t\t\t{#if (service.optional) }\n\t\t\t\t<div on:click={onChange}>\n\t\t\t\t\t<Switch color=\"secondary\" bind:value={conf[\"LA_use_\" + service.name_int]}\n\t\t\t\t\t\t\t\t\tlabel=\"Use the {service.name} service ({service.desc})?\"\n\n\t\t\t\t\t/>\n\t\t\t\t\t{#if service.recommended}\n\t\t\t\t\t\t<span class=\"tip\">Tip: It's quite recommended.</span>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{:else}\n\t\t\t\t<span class=\"desc\">{service.desc.charAt(0).toUpperCase() + service.desc.slice(1)}:</span>\n\t\t\t{/if}\n\t\t</Flex>\n\n\t\t{#if !service.optional || conf[\"LA_use_\" + service.name_int]}\n\t\t\t<Flex justify=\"between\">\n\t\t\t\t<Flex justify=\"start\">\n\t\t\t\t\t{#if (typeof service.forceSubdomain === 'undefined' && !service.forceSubdomain) && !service.withoutUrl}\n\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t<div slot=\"activator\">\n\t\t\t\t\t\t\t\t<div on:click={onChange}>\n\t\t\t\t\t\t\t\t\t<!-- https://github.com/matyunya/smelte/issues/149 -->\n\t\t\t\t\t\t\t\t\t<Switch bind:value={conf[`LA_${service.name_int}_uses_subdomain`]}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\tUse a subdomain for this service?\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if !service.withoutUrl}\n\t\t\t\t\t\t<UrlPrefix ssl={conf.LA_enable_ssl}/>\n\t\t\t\t\t{/if}\n\n\t\t\t\t\t{#if !service.withoutUrl}\n\t\t\t\t\t\t{#if conf[`LA_${service.name_int}_uses_subdomain`]}\n\t\t\t\t\t\t\t<TextField bind:value={conf[`LA_${service.name_int}_suburl`]}\n\t\t\t\t\t\t\t\t\t\t\t\t error={urlError[service.name_int]} on:change={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\t hint={service.hint}/>\n\t\t\t\t\t\t\t<span class=\"nowrap\">.{conf.LA_domain}/</span>\n\t\t\t\t\t\t\t<TextField bind:value={conf[`LA_${service.name_int}_iniPath`]} on:change={onChange}/>\n\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t{#if !conf[`LA_${service.name_int}_uses_subdomain`]}\n\t\t\t\t\t\t\t<span class=\"nowrap\">{conf.LA_domain}/</span>\n\t\t\t\t\t\t\t<TextField bind:value={conf[`LA_${service.name_int}_suburl`]}\n\t\t\t\t\t\t\t\t\t\t\t\t error={urlError[service.name_int]} on:change={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\t hint={service.hint}/>\n\t\t\t\t\t\t\t<span> /</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/if}\n\t\t\t\t</Flex>\n\t\t\t\t<div class=\"deploy-in\">\n\t\t\t\t\t<Select bind:value={conf[`LA_${service.name_int}_hostname`]}\n\t\t\t\t\t\t\t\t\terror={deployError[service.name_int]} class=\"deploy-in\" outlined\n\t\t\t\t\t\t\t\t\tautocomplete on:change={onChange}\n\t\t\t\t\t\t\t\t\tlabel=\"deploy it in\" items={hostnamesList}/>\n\t\t\t\t</div>\n\t\t\t\t{#if service.sample != null}\n\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t<div slot=\"activator\">\n\t\t\t\t\t\t\t<a class=\"btn-visible nohover\" href={service.sample} target=\"_blank\">\n\t\t\t\t\t\t\t\t<Button icon=\"help_outline\" text light flat/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\tSee a similar service in production\n\t\t\t\t\t</Tooltip>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"btn-hidden\">\n\t\t\t\t\t\t<Button icon=\"help_outline\" text light flat/>\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</Flex>\n\t\t{/if}\n\t</div>\n\t<hr>\n{/if}\n\n<!-- </Card.Card> -->\n<!-- </div> -->\n\n<style>\n    .deploy-in {\n        margin: 0 0 5px auto;\n        padding-left: 10px;\n    }\n\n    a.nohover:hover {\n        text-decoration: none;\n    }\n\n    .nowrap {\n        white-space: nowrap;\n    }\n\n    .btn-hidden {\n        opacity: 0%;\n    }\n\n    .btn-visible {\n        opacity: 100%;\n    }\n\n    .tip {\n        color: gray;\n        position: relative;\n        bottom: 3px;\n    }\n\n    .desc {\n\n    }\n\n</style>"
  ],
  "names": [],
  "mappings": "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"
}